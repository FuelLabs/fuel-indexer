[package]
name = "fuel-indexer-tests"
version = "0.0.0"
edition = "2021"
license = "BUSL-1.1"
publish = false
# Disable automatic test target discovery. This allows us to run all the integ tests as a single binary target (lib.rs)
# instead of each integ test file being its own compiled & linked binary which is the default behavior. Linking with
# RocksDB is expensive so we want to minimize the amount of work on ld. This is also how other projects like diesel-rs
# structure their integ tests.
autotests = false
autobenches = false

[lib]
name = "fuel_indexer_tests"
path = "src/lib.rs"

[[test]]
name = "integration_tests"
path = "tests/lib.rs"
harness = true

[dependencies]
actix-service = { version = "2", default-features = false }
actix-web = { version = "4", default-features = false, features = ["macros"] }
async-std = "1"
axum = { version = "0.6", features = ["multipart"] }
bigdecimal = { version = "0.3" }
chrono = { version = "0.4", features = ["serde"] }
fuel-indexer = { workspace = true }
fuel-indexer-api-server = { workspace = true }
fuel-indexer-database = { workspace = true }
fuel-indexer-graphql = { workspace = true }
fuel-indexer-lib = { workspace = true }
fuel-indexer-postgres = { workspace = true, features = ["metrics"] }
fuel-indexer-schema = { workspace = true, default-features = true }
fuel-indexer-types = { workspace = true }
fuel-tx = { workspace = true }
fuels = { features = ["fuel-core-lib", "std"], version = "0.40" }
futures = "0.3"
hex = "0.4"
hyper = { version = "0.14", features = ["client", "http2", "http1", "runtime" ] }
itertools = "0.10"
lazy_static = "1.4"
rand = "0.8"
reqwest = { version = "0.11", default-features = false, features = ["json", "rustls-tls", "multipart"] }
serde = { features = ["derive"], workspace = true }
serde_json = { workspace = true }
serde_yaml = "0.8"
sqlx = { version = "0.6", features = ["bigdecimal"] }
thiserror = { workspace = true }
tokio = { features = ["macros", "rt-multi-thread"], workspace = true }
tracing = { workspace = true }
tracing-subscriber = { version = "0.2", features = ["env-filter"] }
url = "2.3"
wasmer = "2.3"
wasmer-compiler-cranelift = { version = "2.3" }
wasmer-engine-universal = "2.3"
wasmer-middlewares = "2.3"
wasmer-types = "2.3"

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports", "async_tokio"] }

[features]
default = ["e2e", "postgres"]
e2e = []
postgres = []
