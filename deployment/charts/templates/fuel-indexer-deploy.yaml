apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.app.volume.claimname }}
  labels:
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  accessModes:
    - {{ .Values.app.volume.accessmodes }}
  resources:
    requests:
      storage: {{ .Values.app.volume.storagerequests }}
  storageClassName: {{ .Values.app.volume.storageclass }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-manifest-configmap
data:
  manifest.yaml: |-
{{ .Files.Get "manifest.yaml" | indent 4 }}
---
kind: Service
apiVersion: v1
metadata:
  labels:
    app: {{ template "fuel-indexer.name" . }}
    chart: {{ template "fuel-indexer.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  name: {{ template "fuel-indexer.name" . }}-service
spec:
  type: NodePort
  selector:
    app: {{ template "fuel-indexer.name" . }}
  ports:
    - name: http
      port: {{ .Values.app.http_port }}
      protocol: TCP
      targetPort: {{ .Values.app.target_port }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fuel-indexer.name" . }}-k8s
  labels:
    app: {{ template "fuel-indexer.name" . }}
    chart: {{ template "fuel-indexer.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "fuel-indexer.name" . }}
      release: {{ .Release.Name }}
  replicas: {{ .Values.app.replicas }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ template "fuel-indexer.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Values.app.name }}
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}"
          command: ["RUST_BACKTRACE=full ./fuel-indexer"]
          args:
            - "--fuel-node-host"
            - "{{ .Values.app.fuel-node-host }}"
            - "--fuel-node-port"
            - "{{ .Values.app.fuel-node-port }}"
            - "--postgres-host"
            - "{{ .Values.app.postgres.host }}"
            - "--postgres-password"
            - "{{ .Values.app.postgres.password }}"
            - "--test-manifest"
            - "/mnt/config/manifest.yaml"
          resources: {}
          imagePullPolicy: {{ .Values.app.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.app.targetport }}
              protocol: TCP
          volumeMounts:
            - name: {{ .Values.app.volume.pvname }}
              mountPath: "{{ .Values.app.volume.mountPath }}"
            - name: config
              mountPath: "/mnt/config"
          env:
            - name: POSTGRES_HOST
              value: {{ .Values.app.postgres.host }}
            - name: POSTGRES_PORT
              value: {{ .Values.app.postgres.port }}
            - name: POSTGRES_USERNAME
              value: {{ .Values.app.postgres.username }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.app.postgres.password }}
            - name: POSTGRES_DATABASE
              value: {{ .Values.app.postgres.database }}
      volumes:
        - name: {{ .Values.app.volume.pvname }}
          persistentVolumeClaim:
            claimName: {{ .Values.app.volume.claimname }}
        - name: config
          configMap:
            name: {{ .Release.Name }}-manifest-configmap
