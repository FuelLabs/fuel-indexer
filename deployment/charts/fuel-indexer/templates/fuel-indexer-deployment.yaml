apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
    chart: {{ template "fuel-indexer.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      release: {{ .Release.Name }}
  replicas: {{ .Values.app.replicas }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Values.app.name }}
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}"
          command: ["./fuel-indexer"]
          args:
            - "run"
            - "--fuel-node-host"
            - "{{ .Values.app.fuel_node_host }}"
            - "--fuel-node-port"
            - "{{ .Values.app.fuel_node_port }}"
            - "--postgres-password"
            - "{{ .Values.app.postgres.password }}"
            - "--postgres-host"
            - "{{ .Values.app.postgres.host }}"
            - "--postgres-port"
            - "5432"
            - "--postgres-user"
            - "{{ .Values.app.postgres.username }}"
            - "--postgres-database"
            - "{{ .Values.app.postgres.database }}"
            - "--web-api-host"
            - "0.0.0.0"
            - "--run-migrations"
            - "--auth-enabled"
            - "--auth-strategy"
            - "jwt"
            - "--jwt-secret"
            - "{{ .Values.app.jwt.secret }}"
            - "--jwt-issuer"
            - "{{ .Values.app.jwt.issuer }}"
            - "--rate-limit"
            - "--rate-limit-request-count"
            - "3"
            - "--rate-limit-window-size"
            - "10"
            - "--verbose"
            - "--replace-indexer"
            - "--accept-sql-queries"
            - "--block-page-size"
            - "10"
          env:
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-postgres-secret
                key: POSTGRES_PASSWORD
          - name: POSTGRES_HOST
            value: "{{ .Values.app.postgres.host }}"
          - name: POSTGRES_USER
            value: "{{ .Values.app.postgres.username }}"
          - name: POSTGRES_PORT
            value: "5432"
          - name: POSTGRES_DATABASE
            value: "{{ .Values.app.postgres.database }}"
          imagePullPolicy: {{ .Values.app.image.pullPolicy }}
          resources:
            limits:
              cpu: {{ .Values.app.resources.cpu_limits }}
              memory: {{ .Values.app.resources.memory_limits }}
            requests:
              cpu: {{ .Values.app.resources.cpu_requests }}
              memory: {{ .Values.app.resources.memory_requests }}
          ports:
            - name: http
              containerPort: {{ .Values.app.target_port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/health
              port: {{ .Values.app.target_port }}
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 10
          volumeMounts:
            - name: {{ .Release.Name }}
              mountPath: "{{ .Values.app.volume.mountPath }}"
      volumes:
        - name: {{ .Release.Name }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}
