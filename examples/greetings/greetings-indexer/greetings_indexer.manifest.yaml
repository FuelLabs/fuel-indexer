# A namespace is a logical grouping of declared names. Think of the namespace
# as an organization identifier
namespace: fuellabs

# The identifier field is used to identify the given index.
identifier: greetings

# Indexer contract configuration.
contract:

  # File paths to the contract JSON ABIs that are generated when you build your Sway contracts.
  abi: examples/greetings/contracts/greeting/out/debug/greeting-abi.json

  # Specifies which particular contracts you would like your indexer to subscribe to.
  subscriptions:
    - fuel1q6sj2srt0u40jdqg2lvvnspyuhse9rs2s2fv9nmv0hqjcrdc7sqsfpwv9x

# The particular start block after which you'd like your indexer to start indexing events.
start_block: ~

# The particular end block after which you'd like your indexer to stop indexing events.
end_block: ~

# The `fuel_client` denotes the address (host, port combination) of the running Fuel client
# that you would like your indexer to index events from. In order to use this per-indexer
# `fuel_client` option, the indexer service at which your indexer is deployed will have to run
# with the `--indexer_net_config` option.
fuel_client: ~

# The graphql_schema field contains the file path that points to the GraphQL schema for the
# given index.
schema: examples/greetings/greetings-indexer/schema/greetings_indexer.schema.graphql

# The module field contains a file path that points to code that will be run as an executor inside
# of the indexer.
# Important: At this time, wasm is the preferred method of execution.
module:
  wasm: target/wasm32-unknown-unknown/release/greetings_indexer.wasm

# The resumable field contains a boolean that specifies whether or not the indexer should, synchronise
# with the latest block if it has fallen out of sync.
resumable: true

# Indexer predicate configuration.
predicates:

  # Template commitments (hashes) of the bytecode of predicates used by this indexer.
  templates: ~
